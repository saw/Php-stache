<?php


class Model_Stage extends Model_Action {
    
    const CACHEKEY = 'stagecache';
    
    protected $data;
    protected $blocks;
    protected $filename = 'stage.data';
    
    public function start(Model_ByUser $owner){
         $events = new Model_Events();
        // if($this->blocks->hardBlock){
        //     $events->addEvent('stage', $owner, 'Tried to stage, but there was a hard block', LogLevel::INFO);
        //     return false;
        // }
        

        if($this->data['running'] != false){

            return false;
        }else{
            $this->data['running'] = array('start' => date('U'), 'owner' => $owner);
        }
        
       
        $events->addEvent('stage', $owner, 'Stage started', LogLevel::EVENT);
        // $events->addEvent('stage', 'system', 'Stage started', LogLevel::INFO);
        $this->data['log'] =  "Stage started\n";
        $this->writeData();
        
        return true;
    }
    
    public function isRunning(){
        
        //this just "runs" for 30 seconds
        
        if($this->data['running'] == false){
            return false;
        }else{
            
            $events = new Model_Events();
            //fake log output
            
            if(rand(0, 20) == 2){
                
                
                $time = microtime(true) - $this->data['lasttouch'];
                $time = round($time * 1000);

                $this->data['lasttouch'] = microtime(true);
                $msg = "Stage did something..........($time ms)";
                $this->data['log'] .=  "$msg\n";
                $events->addEvent('stage', Model_ByUser::getSystemUser(), $msg, LogLevel::INFO);
            }
            
            if(rand(0,20) == 5){
                $events->addEvent('stage', Model_ByUser::getSystemUser(), "....did something else", LogLevel::INFO);
                $time = microtime(true) - $this->data['lasttouch'];
                $time = round($time * 1000);

                $this->data['lasttouch'] = microtime(true);

                $this->data['log'] .=  "Stage did something else..........($time ms)\n";
            }
            
            $time = date('U') - $this->data['running']['start'];
            if($time > 10){
                $events->addEvent('stage', $this->data['running']['owner'], "Site Staged by {$this->data['running']['owner']->user_id}" , LogLevel::EVENT);
                // $events->addEvent('stage', $this->data['running']['owner'], "Site Staged" , LogLevel::INFO);
                $this->data['log'] .=  "Site staged\n";
                $this->data['running'] = false;
                $this->writeData();
                return false;
            }else{
                $this->writeData();
                return true;
            }
            
        }

    }
    
    
    public function getLog(){
        return $this->data['log'];
    }
    
    public function getLastStageInfo(){
        
    }
    
    public function stop(){
        
    }
    
}