<?php

/**
 * Base class for actions such as blocking, deploying etc.
 * currently "fake" data is stored as serialized php in a file.
 * @abstract
 */
abstract class Model_Action {
    
    /**
     * 
     * @property string $filename the path to the data file
     */
    protected $filename;
    protected $data = false;
    
    /**
     * Start the action
     * @return void
     */
    abstract public function start(Model_ByUser $owner);
    
    /**
     * @return boolean
     */
    abstract public function isRunning();   
    
    /**
     * Load and parse the data file
     */
    public function __construct(){
        $this->loadData();
        if($this->data){
            if(!array_key_exists('lasttouch', $this->data)){
                $this->data['lasttouch'] = microtime(true);
            }
        }else{
            $this->data = array('running' => false, 'log' => '', 'lasttouch' => microtime(true));
        }
    } 
    
    /**
     * reload data from the data file
     */
    protected function loadData(){
        if(is_file('/tmp/fld-'.$this->filename)){
			$str = file_get_contents('/tmp/fld-'.$this->filename);
			$this->data = unserialize($str);
		}else{
            // error_log('no data');
		}
    }
    
    /**
     * write the data file
     */
    protected function writeData(){
        error_log(serialize($this->data));
        file_put_contents('/tmp/fld-' . $this->filename, serialize($this->data));
    }
    
}