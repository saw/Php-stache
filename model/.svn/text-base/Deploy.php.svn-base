<?php


class Model_Deploy extends Model_Action {
    
    
    
    const CACHEKEY = 'deploycache';
    
    protected $data;
    protected $blocks;
    protected $filename = 'deploy.data';

    
    public function start(Model_ByUser $owner){
        $events = new Model_Events();
        
        if(true == false){
            $events->addEvent('deploy', $owner, 'Tried to deploy, but there was a block', LogLevel::INFO);
            return false;
        }

        if(isset($this->data['running']['start'])){
            return false;
        }else{
            $this->data['log'] = '';
            $this->data['running'] = array('start' => date('U'), 'owner' => $owner);
        }
        
        
        $events->addEvent('deploy', $owner, 'Deploy started', LogLevel::EVENT);
        $this->data['log'] .=  "Deploy Started\n";
        $this->writeData();
        
        return true;
    }
    
    public function isRunning(){
        //this just "runs" for 30 seconds
        
        if($this->data['running'] == false){
            return false;
        }else{
            
            $events = new Model_Events();
            //fake log output
            
            if(rand(0, 10) == 2){
                

                $time = microtime(true) - $this->data['lasttouch'];
                $time = round($time * 1000);
                
                $this->data['lasttouch'] = microtime(true);
                $msg = "Deploy did something..........($time ms)";
                error_log('deploy tick');
                $events->addEvent('deploy', Model_ByUser::getSystemUser(), $msg, LogLevel::INFO);
                $this->data['log'] .=  $msg . "\n";
                error_log($this->data['log']);
            }
  
            $time = date('U') - $this->data['running']['start'];
            
            if($time > 10){
                $events->addEvent('deploy', $this->data['running']['owner'], "Site Deployed by {$this->data['running']['owner']->user_id}" , LogLevel::EVENT);
                $this->data['log'] .= "Site Deployed by {$this->data['running']['owner']->user_id}\n";
                $this->data['running'] = false;
                $this->writeData();
                return false;
            }else{
                $this->writeData();
                return true;
            }
            
        }
        
    }
    
    public function getLog(){
        return $this->data['log'];
    }
    
    public function getLastDeployInfo(){
        
    }
    
    public function stop(){
        
    }
    
}