<?php


class Model_UnifiedLog {
	
	const OUT_FILE = '/tmp/fldlog.txt';
	
	protected $logText;
	protected $log = array();
    
	public function __construct(){
		$this->readLog();
	}
	
	protected function writeLog(){
		file_put_contents(self::OUT_FILE, json_encode($this->log));
	}
	
	protected function readLog(){
		if(is_file(self::OUT_FILE)){
			$this->logText = file_get_contents(self::OUT_FILE);
			$this->log = json_decode($this->logText);
		}else{
			$this->log = array();
		}
	}
	
	public function getMessages($count){
		return $this->log;
	}

	public function addMessage($type, $action, $message, $user = 'root'){
	    if(!is_string($user) || !is_string($message) || !is_string($user)){
	        throw new Exception ('trying to save a non string in a message will not work');
	    }
		$this->log[] = array('time' => (round(microtime(true) * 100)), 'action' => $action, 'type' => $type, 'message' => $message, 'owner' => $user);
	}
	

	public function getNewMessages($lastId){
		
	}
	
	public function getLastLogId(){
	    error_log($this->log[count($this->log) -1]);
	    return round($this->log[count($this->log) -1]->time);
	}
	
	public function save(){
		$this->writeLog();
	}


}


